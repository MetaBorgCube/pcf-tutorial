name = "pcf"
java-class-id-prefix = java Pcf
file-extension = "pcf"

sdf3 {}
esv {}
statix {
  source = files {
    sdf3-statix-signature-generation = true
  }
}
stratego {
  source = files {
    sdf3-statix-explication-generation = true
  }
}

parser {
  default-start-symbol = sort Start
}
styler {}
constraint-analyzer {}
stratego-runtime {}
reference-resolution {
  variant = stratego {
    strategy = strategy editor-resolve
  }
}
hover {
  variant = stratego {
    strategy = strategy editor-hover
  }
}

build-dependencies [
  org.metaborg:strategolib:*
  org.metaborg:gpp:*
  org.metaborg:libspoofax2:*
  org.metaborg:libstatix:*
]

task-def mb.pcf.task.PcfEvaluateTask
let showEvaluate = task-def mb.pcf.task.PcfShowEvaluate

let showEvaluateCommand = command-def {
  task-def = showEvaluate
  display-name = "Evaluate"
  parameters = [
    rootDirectory {
      type = java mb.resource.hierarchical.ResourcePath
      argument-providers = [EnclosingContext(Project)]
    }
    file {
      type = java mb.resource.ResourceKey
      argument-providers = [Context(ReadableResource)]
    }
  ]
}

editor-context-menu [
  menu "Evaluate" [
    command-action {
      command-def = showEvaluateCommand
      execution-type = Once
      required-enclosing-resource-types = [Project]
    }
    command-action {
      command-def = showEvaluateCommand
      execution-type = Continuous
      required-enclosing-resource-types = [Project]
    }
  ]
]

resource-context-menu [
  command-action {
    command-def = showEvaluateCommand
    execution-type = Once
    required-resource-types = [File]
    required-enclosing-resource-types = [Project]
  }
]
